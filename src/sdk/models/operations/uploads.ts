/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum UploadsRequestBodyParentType {
    Test = "test",
    Execution = "execution",
}

/**
 * Upload files request body data
 */
export class UploadsRequestBody1 extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "multipart_form, name=filePath" })
    filePath?: string;

    @SpeakeasyMetadata({ data: "multipart_form, name=parentName" })
    parentName?: string;

    @SpeakeasyMetadata({ data: "multipart_form, name=parentType" })
    parentType?: UploadsRequestBodyParentType;
}

export class UploadsResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * problem with the input
     */
    @SpeakeasyMetadata({ elemType: shared.Problem })
    problems?: shared.Problem[];

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * successful operation
     */
    @SpeakeasyMetadata()
    uploads200ApplicationJSONString?: string;

    /**
     * successful operation
     */
    @SpeakeasyMetadata()
    uploads200TextYamlString?: string;
}
