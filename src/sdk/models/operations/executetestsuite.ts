/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ExecuteTestSuiteRequest extends SpeakeasyBase {
    /**
     * body passed to configure execution
     */
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    testSuiteExecutionRequestInput: shared.TestSuiteExecutionRequestInput;

    /**
     * unique id of the object
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;

    /**
     * last N days to show
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=last" })
    last?: number;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=namespace" })
    namespace?: string;
}

export class ExecuteTestSuiteResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * problem with request body
     */
    @SpeakeasyMetadata({ elemType: shared.Problem })
    problems?: shared.Problem[];

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * successful operation
     */
    @SpeakeasyMetadata()
    testSuiteExecutionsResult?: shared.TestSuiteExecutionsResult;
}
