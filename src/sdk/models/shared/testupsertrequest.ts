/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionRequestInput } from "./executionrequest";
import { TestContent } from "./testcontent";
import { TestStatus } from "./teststatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 * test create request body
 */
export class TestUpsertRequestInput extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "content" })
    @Type(() => TestContent)
    content?: TestContent;

    @SpeakeasyMetadata()
    @Expose({ name: "created" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    created?: Date;

    /**
     * test execution request body
     */
    @SpeakeasyMetadata()
    @Expose({ name: "executionRequest" })
    @Type(() => ExecutionRequestInput)
    executionRequest?: ExecutionRequestInput;

    /**
     * test labels
     */
    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels?: Record<string, string>;

    /**
     * test name
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * test namespace
     */
    @SpeakeasyMetadata()
    @Expose({ name: "namespace" })
    namespace?: string;

    /**
     * schedule to run test
     */
    @SpeakeasyMetadata()
    @Expose({ name: "schedule" })
    schedule?: string;

    /**
     * reference to test source resource
     */
    @SpeakeasyMetadata()
    @Expose({ name: "source" })
    source?: string;

    /**
     * test status
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    @Type(() => TestStatus)
    status?: TestStatus;

    /**
     * test type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;

    /**
     * list of file paths that will be needed from uploads
     */
    @SpeakeasyMetadata()
    @Expose({ name: "uploads" })
    uploads?: string[];
}
