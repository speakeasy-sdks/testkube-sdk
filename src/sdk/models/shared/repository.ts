/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SecretRef } from "./secretref";
import { Expose, Type } from "class-transformer";

/**
 * auth type for git requests
 */
export enum RepositoryAuthType {
    Basic = "basic",
    Header = "header",
}

/**
 * VCS repository type
 */
export enum RepositoryType {
    Git = "git",
}

/**
 * repository representation for tests in git repositories
 */
export class Repository extends SpeakeasyBase {
    /**
     * auth type for git requests
     */
    @SpeakeasyMetadata()
    @Expose({ name: "authType" })
    authType?: RepositoryAuthType;

    /**
     * branch/tag name for checkout
     */
    @SpeakeasyMetadata()
    @Expose({ name: "branch" })
    branch?: string;

    /**
     * secret with certificate for private repositories. Should contain one key ending with .crt such as "mycorp.crt", whose value is the certificate file content, suitable for git config http.sslCAInfo
     */
    @SpeakeasyMetadata()
    @Expose({ name: "certificateSecret" })
    certificateSecret?: string;

    /**
     * commit id (sha) for checkout
     */
    @SpeakeasyMetadata()
    @Expose({ name: "commit" })
    commit?: string;

    /**
     * if needed we can checkout particular path (dir or file) in case of BIG/mono repositories
     */
    @SpeakeasyMetadata()
    @Expose({ name: "path" })
    path?: string;

    /**
     * git auth token for private repositories
     */
    @SpeakeasyMetadata()
    @Expose({ name: "token" })
    token?: string;

    /**
     * Testkube internal reference for secret storage in Kubernetes secrets
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tokenSecret" })
    @Type(() => SecretRef)
    tokenSecret?: SecretRef;

    /**
     * VCS repository type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: RepositoryType;

    /**
     * uri of content file or git directory
     */
    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri: string;

    /**
     * git auth username for private repositories
     */
    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username?: string;

    /**
     * Testkube internal reference for secret storage in Kubernetes secrets
     */
    @SpeakeasyMetadata()
    @Expose({ name: "usernameSecret" })
    @Type(() => SecretRef)
    usernameSecret?: SecretRef;

    /**
     * if provided we checkout the whole repository and run test from this directory
     */
    @SpeakeasyMetadata()
    @Expose({ name: "workingDir" })
    workingDir?: string;
}
