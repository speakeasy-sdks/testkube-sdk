/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionResult } from "./executionresult";
import { Expose, Transform, Type } from "class-transformer";

/**
 * One of possible output types
 */
export enum ExecutorOutputType {
    Error = "error",
    Log = "log",
    Event = "event",
    Result = "result",
}

/**
 * CRD based executor data
 */
export class ExecutorOutput extends SpeakeasyBase {
    /**
     * Message/event data passed from executor (like log lines etc)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "content" })
    content?: string;

    /**
     * execution result returned from executor
     */
    @SpeakeasyMetadata()
    @Expose({ name: "result" })
    @Type(() => ExecutionResult)
    result?: ExecutionResult;

    /**
     * Timestamp of log
     */
    @SpeakeasyMetadata()
    @Expose({ name: "time" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    time?: Date;

    /**
     * One of possible output types
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: ExecutorOutputType;
}
