/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Repository } from "./repository";
import { Expose, Type } from "class-transformer";

/**
 * type of sources a runner can get data from.
 *
 * @remarks
 *   string: String content (e.g. Postman JSON file).
 *   file-uri: content stored on the webserver.
 *   git-file: the file stored in the Git repo in the given repository.path field (Deprecated: use git instead).
 *   git-dir: the entire git repo or git subdirectory depending on the  repository.path field (Testkube does a shadow clone and sparse checkout to limit IOs in the case of monorepos). (Deprecated: use git instead).
 *   git: automatically provisions either a file, directory or whole git repository depending on the repository.path field.
 *
 */
export enum TestSourceType {
    String = "string",
    FileUri = "file-uri",
    GitFile = "git-file",
    GitDir = "git-dir",
    Git = "git",
}

/**
 * Test source resource for shared test content
 */
export class TestSource extends SpeakeasyBase {
    /**
     * test content data as string
     */
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    data?: string;

    /**
     * test source labels
     */
    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels?: Record<string, string>;

    /**
     * test source name
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * test source namespace
     */
    @SpeakeasyMetadata()
    @Expose({ name: "namespace" })
    namespace?: string;

    /**
     * repository representation for tests in git repositories
     */
    @SpeakeasyMetadata()
    @Expose({ name: "repository" })
    @Type(() => Repository)
    repository?: Repository;

    /**
     * type of sources a runner can get data from.
     *
     * @remarks
     *   string: String content (e.g. Postman JSON file).
     *   file-uri: content stored on the webserver.
     *   git-file: the file stored in the Git repo in the given repository.path field (Deprecated: use git instead).
     *   git-dir: the entire git repo or git subdirectory depending on the  repository.path field (Testkube does a shadow clone and sparse checkout to limit IOs in the case of monorepos). (Deprecated: use git instead).
     *   git: automatically provisions either a file, directory or whole git repository depending on the repository.path field.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: TestSourceType;

    /**
     * test content
     */
    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri?: string;
}
