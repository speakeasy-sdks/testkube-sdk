/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventType } from "./eventtype";
import { Expose } from "class-transformer";

/**
 * webhook create request body
 */
export class WebhookCreateRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "events" })
    events: EventType[];

    /**
     * webhook headers
     */
    @SpeakeasyMetadata()
    @Expose({ name: "headers" })
    headers?: Record<string, string>;

    /**
     * webhook labels
     */
    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels?: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "namespace" })
    namespace?: string;

    /**
     * will load the generated payload for notification inside the object
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payloadObjectField" })
    payloadObjectField?: string;

    /**
     * golang based template for notification payload
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payloadTemplate" })
    payloadTemplate?: string;

    /**
     * Labels to filter for tests and test suites
     */
    @SpeakeasyMetadata()
    @Expose({ name: "selector" })
    selector?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "uri" })
    uri: string;
}
