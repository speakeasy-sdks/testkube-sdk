/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { objectToClass, SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RunningContext } from "./runningcontext";
import { TestContentRequest } from "./testcontentrequest";
import { Variable } from "./variable";
import { Expose, Transform, Type } from "class-transformer";

/**
 * test suite execution request body
 */
export class TestSuiteExecutionRequest extends SpeakeasyBase {
    /**
     * number of tests run in parallel
     */
    @SpeakeasyMetadata()
    @Expose({ name: "concurrencyLevel" })
    concurrencyLevel?: number;

    /**
     * test content request body
     */
    @SpeakeasyMetadata()
    @Expose({ name: "contentRequest" })
    @Type(() => TestContentRequest)
    contentRequest?: TestContentRequest;

    /**
     * cron job template extensions
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cronJobTemplate" })
    cronJobTemplate?: string;

    /**
     * execution labels
     */
    @SpeakeasyMetadata()
    @Expose({ name: "executionLabels" })
    executionLabels?: Record<string, string>;

    /**
     * http proxy for executor containers
     */
    @SpeakeasyMetadata()
    @Expose({ name: "httpProxy" })
    httpProxy?: string;

    /**
     * https proxy for executor containers
     */
    @SpeakeasyMetadata()
    @Expose({ name: "httpsProxy" })
    httpsProxy?: string;

    /**
     * test suite labels
     */
    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels?: Record<string, string>;

    /**
     * test execution custom name
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * test kubernetes namespace ("testkube" when not set)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "namespace" })
    namespace?: string;

    /**
     * test suite execution number
     */
    @SpeakeasyMetadata()
    @Expose({ name: "number" })
    number?: number;

    /**
     * running context for test or test suite execution
     */
    @SpeakeasyMetadata()
    @Expose({ name: "runningContext" })
    @Type(() => RunningContext)
    runningContext?: RunningContext;

    /**
     * secret uuid
     */
    @SpeakeasyMetadata()
    @Expose({ name: "secretUUID" })
    secretUUID?: string;

    /**
     * whether to start execution sync or async
     */
    @SpeakeasyMetadata()
    @Expose({ name: "sync" })
    sync?: boolean;

    /**
     * duration in seconds the test suite may be active, until its stopped
     */
    @SpeakeasyMetadata()
    @Expose({ name: "timeout" })
    timeout?: number;

    /**
     * execution variables passed to executor converted to vars for usage in tests
     */
    @SpeakeasyMetadata({ elemType: Variable })
    @Expose({ name: "variables" })
    @Transform(
        ({ value }) => {
            const obj: Record<string, Variable> = {};
            for (const key in value) {
                obj[key] = objectToClass(value[key], Variable);
            }
            return obj;
        },
        { toClassOnly: true }
    )
    variables?: Record<string, Variable>;
}
